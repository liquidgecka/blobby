jobs:
  test-go1.15:
    docker:
      - image: circleci/golang:1.15
    steps:
      - checkout
      - run: go mod download
      - run: ./scripts/check
      - run: ./scripts/build
  test-go1.16:
    docker:
      - image: circleci/golang:1.16
    steps:
      - checkout
      - run: go mod download
      - run: ./scripts/check
      - run: ./scripts/build
  debian_orig_gz:
    docker:
      - image: ubuntu:20.04
    steps:
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common"
      - run: "DEBIAN_FRONTEND=noninteractive add-apt-repository -y ppa:longsleep/golang-backports"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y git"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y golang-go"
      - checkout
      - run: "packaging/ubuntu_ppa/prep.sh"
      - persist_to_workspace:
          root: /tmp/build
          paths:
            - "*.orig.tar.gz"
            - "changelog"
            - "version"
  ubuntu-1804:
    docker:
      - image: ubuntu:18.04
    steps:
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y debhelper"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y debianutils"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y debootstrap"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y dh-golang"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y dh-systemd"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y git"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y gnupg"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y ubuntu-dev-tools"
      - run: "DEBIAN_FRONTEND=noninteractive add-apt-repository -y ppa:longsleep/golang-backports"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y golang-go"
      - run: "echo \"$UBUNTU_PGP_KEY\" | tr '|' '\\n' > /tmp/gpg.ascii && gpg --import /tmp/gpg.ascii"
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: "mkdir /tmp/build"
      - run: "cp -v /tmp/workspace/* /tmp/build/"
      - run: "packaging/ubuntu_ppa/build.sh"
      - persist_to_workspace:
          root: /tmp/build
          paths:
            - "*.build"
            - "*.buildinfo"
            - "*.changes"
            - "*.dsc"
            - "*.upload"
            - "*.xz"
      - run: "cd /tmp/build/blobbyd-$(cat /tmp/build/version) && debuild -B"
  ubuntu-2004:
    docker:
      - image: ubuntu:20.04
    steps:
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y debhelper"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y debianutils"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y debootstrap"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y dh-golang"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y dh-systemd"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y git"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y gnupg"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y ubuntu-dev-tools"
      - run: "DEBIAN_FRONTEND=noninteractive add-apt-repository -y ppa:longsleep/golang-backports"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y golang-go"
      - run: "echo \"$UBUNTU_PGP_KEY\" | tr '|' '\\n' > /tmp/gpg.ascii && gpg --import /tmp/gpg.ascii"
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: "mkdir /tmp/build"
      - run: "cp -v /tmp/workspace/* /tmp/build/"
      - run: "packaging/ubuntu_ppa/build.sh"
      - persist_to_workspace:
          root: /tmp/build
          paths:
            - "*.build"
            - "*.buildinfo"
            - "*.changes"
            - "*.dsc"
            - "*.upload"
            - "*.xz"
      - run: "cd /tmp/build/blobbyd-$(cat /tmp/build/version) && debuild -B"
  ubuntu-2104:
    docker:
      - image: ubuntu:21.04
    steps:
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y build-essential"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y debhelper"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y debianutils"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y debootstrap"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y dh-golang"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y git"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y gnupg"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y ubuntu-dev-tools"
      - run: "DEBIAN_FRONTEND=noninteractive add-apt-repository -y ppa:longsleep/golang-backports"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y golang-go"
      - run: "echo \"$UBUNTU_PGP_KEY\" | tr '|' '\\n' > /tmp/gpg.ascii && gpg --import /tmp/gpg.ascii"
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run: "mkdir /tmp/build"
      - run: "cp -v /tmp/workspace/* /tmp/build/"
      - run: "packaging/ubuntu_ppa/build.sh"
      - persist_to_workspace:
          root: /tmp/build
          paths:
            - "*.build"
            - "*.buildinfo"
            - "*.changes"
            - "*.dsc"
            - "*.upload"
            - "*.xz"
      - run: "cd /tmp/build/blobbyd-$(cat /tmp/build/version) && debuild -B"
  ubuntu-release:
    docker:
      - image: ubuntu:21.04
    steps:
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates dput"
      - run: "echo \"$UBUNTU_PGP_KEY\" | tr '|' '\\n' > /tmp/gpg.ascii && gpg --import /tmp/gpg.ascii"
      - attach_workspace:
          at: /tmp/build
      - run: "cd /tmp/build && dput ppa:iterable/blobby *.changes"
  ubuntu-release-dev:
    docker:
      - image: ubuntu:21.04
    steps:
      - run: "DEBIAN_FRONTEND=noninteractive apt-get update"
      - run: "DEBIAN_FRONTEND=noninteractive apt-get install -y ca-certificates dput"
      - run: "echo \"$UBUNTU_PGP_KEY\" | tr '|' '\\n' > /tmp/gpg.ascii && gpg --import /tmp/gpg.ascii"
      - attach_workspace:
          at: /tmp/build
      - run: "cd /tmp/build && dput ppa:iterable/blobby-dev *.changes"

workflows:
  version: 2
  build-deploy:
    jobs:
      - test-go1.15:
          filters:
            branches:
              only: "/.*/"
            tags:
              only: "/^v.*/"
      - test-go1.16:
          filters:
            branches:
              only: "/.*/"
            tags:
              only: "/^v.*/"
      - debian_orig_gz:
          filters:
            branches:
              only: "/.*/"
            tags:
              only: "/^v.*/"
      - ubuntu-1804:
          requires:
            - debian_orig_gz
          filters:
            branches:
              only: "/.*/"
            tags:
              only: "/^v.*/"
      - ubuntu-2004:
          requires:
            - debian_orig_gz
          filters:
            branches:
              only: "/.*/"
            tags:
              only: "/^v.*/"
      - ubuntu-2104:
          requires:
            - debian_orig_gz
          filters:
            branches:
              only: "/.*/"
            tags:
              only: "/^v.*/"
      - ubuntu-release:
          requires:
            - test-go1.15
            - test-go1.16
            - ubuntu-1804
            - ubuntu-2004
            - ubuntu-2104
          filters:
            tags:
              only: /^v\d+(\.\d+)*/
            branches:
              ignore: "/.*/"
      - ubuntu-release-dev:
          requires:
            - test-go1.15
            - test-go1.16
            - ubuntu-1804
            - ubuntu-2004
            - ubuntu-2104
          filters:
            tags:
              only: /^v\d+(\.\d+)*(-.*)?/
            branches:
              ignore: "/.*/"
